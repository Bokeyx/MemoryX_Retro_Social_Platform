# 이 파일은 Dockerfile에 의해 /etc/nginx/conf.d/default.conf 로 복사됩니다.
server {
    # Nginx가 80번 포트에서 요청을 수신합니다.
    listen 80;
    server_name localhost;

    # React 앱의 빌드 결과물이 위치하는 컨테이너 내부 경로입니다.
    root /usr/share/nginx/html;
    index index.html index.htm;

    # --- FastAPI AI API 프록시 (가장 먼저 처리) ---
    # '/api/ai/' 또는 '/retro/'로 시작하는 모든 요청을 FastAPI 컨테이너로 보냅니다.
    # Nginx는 가장 구체적인 경로를 먼저 확인하므로, 이 규칙이 /api/ 규칙보다 위에 있어야 합니다.
    location ~ ^/(api/ai|retro)/ {
        # docker-compose.yml에 정의된 FastAPI 서비스의 이름과 포트를 사용합니다.
        # proxy_pass 뒤의 슬래시(/)는 요청 경로를 재작성하는 중요한 역할을 합니다.
        # 예: /api/ai/transform -> http://memoryx_backend_ai:8000/transform
        proxy_pass http://memoryx_backend_ai:8000; 
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # --- Spring Boot API 프록시 ---
    # '/api/'로 시작하는 나머지 모든 요청을 Spring Boot 컨테이너로 보냅니다.
    location /api/ {
        # docker-compose.yml에 정의된 Spring Boot 서비스의 이름과 포트를 사용합니다.
        proxy_pass http://memoryx_backend_spring:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # --- React Router를 위한 설정 ---
    # 위에서 처리되지 않은 모든 요청은 React 앱으로 전달하여,
    # 클라이언트 사이드 라우팅이 작동하도록 합니다.
    location / {
        try_files $uri $uri/ /index.html;
    }

    # 50x 에러 발생 시 보여줄 기본 에러 페이지 설정
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
