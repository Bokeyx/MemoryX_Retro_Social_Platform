plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.7'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation' // 유효성 검사 의존성 추가
	runtimeOnly 'com.mysql:mysql-connector-j'
	
	// openai
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.11'

	// --- Lombok 설정 (이 부분이 중요합니다) ---
    // 컴파일 시에만 Lombok 라이브러리를 사용합니다.
    compileOnly 'org.projectlombok:lombok'

		// ✅ JWT (JJWT 최신 버전 - 중요)
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    
    // 어노테이션 프로세서로 Lombok을 지정합니다.
    // 이 설정이 빠지면 @Getter, @Builder 등이 작동하지 않습니다.
    annotationProcessor 'org.projectlombok:lombok'

    // (선택 사항) 테스트 코드에서도 Lombok을 사용하기 위한 설정
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	useJUnitPlatform()
}

// 이 부분이 빠져 있었어! 여기에 추가해야 해!
tasks.withType(JavaCompile) {
    options.compilerArgs << "-parameters"
}
